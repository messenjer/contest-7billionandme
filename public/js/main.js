// Generated by CoffeeScript 1.3.3
var Population;

Population = (function() {

  function Population() {
    var _this = this;
    this.initialPopulation = null;
    this.currentPopulation = null;
    this.wantedDate = null;
    this.wantedTimestamp = null;
    this.handlerList = {
      'compute': $('.app-compute'),
      'wantedDate': $('.app-wantedDate'),
      'wantedPopulation': $('.app-wantedPopulation'),
      'currentPopulation': $('.app-currentPopulation')
    };
    this.handlerList['compute'].click(function(e) {
      var wantedPopulation;
      e.preventDefault();
      wantedPopulation = _this.getWantedPopulation(_this.wantedTimestamp);
      return _this.handlerList['wantedPopulation'].html(wantedPopulation);
    });
  }

  Population.prototype.setWantedDate = function(wantedDate) {
    this.wantedDate = wantedDate;
    this.wantedTimestamp = this.wantedDate.getTime() / 1000;
    this.handlerList['wantedDate'].html(this.displayDate(this.wantedTimestamp));
    return this;
  };

  Population.prototype.getPopulation = function() {
    var _this = this;
    return $.getJSON('/population', function(data) {
      var callback;
      _this.currentPopulation = data;
      if (_this.initialPopulation === null) {
        _this.initialPopulation = _this.currentPopulation;
      }
      _this.handlerList['currentPopulation'].html(_this.currentPopulation['population']);
      callback = function() {
        return _this.getPopulation();
      };
      return setTimeout(callback, 5000);
    });
  };

  Population.prototype.getWantedPopulation = function(wantedTimestamp) {
    var growth, p1, p2, t1, t2, wantedPopulation;
    if (this.initialPopulation !== null && this.currentPopulation !== null) {
      t1 = this.initialPopulation['timestamp'];
      t2 = this.currentPopulation['timestamp'];
      p1 = this.initialPopulation['population'];
      p2 = this.currentPopulation['population'];
      growth = (p2 - p1) / (t2 - t1);
      wantedPopulation = Math.floor(p1 + ((wantedTimestamp - t1) * growth));
      console.log('Population increase of ' + (p2 - p1) + ' people in ' + (t2 - t1));
      console.log('Growth is ' + growth);
      console.log('Population should be ' + wantedPopulation + '(+' + (wantedPopulation - p1) + ') in ' + (wantedTimestamp - t1) + ' seconds');
    }
    return wantedPopulation;
  };

  Population.prototype.displayDate = function(timestamp) {
    var date, day, dislayDate, hour, minute, month, second, year;
    date = new Date(timestamp * 1000);
    day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
    month = date.getMonth() + 1 < 10 ? '0' + date.getMonth() + 1 : date.getMonth();
    year = date.getFullYear();
    hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
    minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();
    second = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();
    return dislayDate = "" + day + "/" + month + "/" + year + " " + hour + ":" + minute + ":" + second;
  };

  return Population;

})();

$(function() {
  var population;
  population = new Population();
  population.getPopulation();
  return population.setWantedDate(new Date(2012, 11, 17, 12, 0, 0));
});
